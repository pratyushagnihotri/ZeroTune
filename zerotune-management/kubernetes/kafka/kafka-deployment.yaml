apiVersion: apps/v1
kind: Deployment
namespace: plangeneratorflink-namespace
metadata:
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      pgf.kafka: 'yes'
  template:
    metadata:
      labels:
        pgf.kafka: 'yes'    
    spec:
      containers:
      - name: kafka
        image: bitnami/kafka:latest
        env:
          - name: KAFKA_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: ALLOW_PLAINTEXT_LISTENER
            value: "yes"
          - name: KAFKA_BROKER_ID
            value: "1"
          - name: KAFKA_CFG_ADVERTISED_LISTENERS
            value: CLIENT://$(KAFKA_POD_IP):9092,EXTERNAL://$(KAFKA_POD_IP):9093
          - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
            value: CLIENT
          - name: KAFKA_CFG_LISTENERS
            value: CLIENT://:9092,EXTERNAL://:9093
          - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
            value: CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
          - name: KAFKA_CFG_ZOOKEEPER_CONNECT
            value: zookeeper:2181
          - name: KAFKA_CFG_LOG_RETENTION_BYTES
            value: '2147483648'
          - name: KAFKA_CFG_LOG_SEGMENT_BYTES
            value: '268435456'
          - name: KAFKA_CFG_LOG_ROLL_MS
            value: '10000'
          - name: KAFKA_CFG_LOG_RETENTION_MS
            value: '5000'
          - name: KAFKA_CFG_LOG_RETENTION_CHECK_INTERVAL_MS
            value: '5000'
          - name: KAFKA_CFG_LOG_SEGMENT_DELETE_DELAY_MS
            value: '5000'
        ports:
          - containerPort: 9092
          - containerPort: 9093
        volumeMounts:
          - mountPath: /bitnami/kafka
            name: kafka-logs
      volumes:
        - name: kafka-logs
          emptyDir:
          sizeLimit: 7Gi
      restartPolicy: Always
